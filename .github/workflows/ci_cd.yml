name: CI/CD - Univesp PI - Caritas
env:
  AZURE_WEBAPP_NAME: caritas-api
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  PHP_VERSION: '8.2.0'

on:
  workflow_dispatch:
  push:
    branches:
    - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: "${{ secrets.CI_MYSQL_ROOT_PASSWORD }}"
          MYSQL_DATABASE: laravel
        ports:
        - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, bcmath, pdo_mysql
        ini-values: post_max_size=256M, max_execution_time=300
        coverage: none

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Copy .env
      run: cp .env.example .env

    - name: Generate application key
      run: php artisan key:generate

    - name: Wait for MySQL
      run: |
        until mysql -h 127.0.0.1 -u root -p'${{ secrets.CI_MYSQL_ROOT_PASSWORD }}' -e "SHOW DATABASES"; do
          sleep 1
        done

    - name: Run migrations
      run: php artisan migrate --env=testing

    - name: Run Sseeders
      run: php artisan db:seed

    - name: Run tests
      run: php artisan test
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.PHP_VERSION }}

    - name: Check if composer.json exists
      id: check_files
      uses: andstor/file-existence-action@v3
      with:
        files: 'composer.json'

    - name: Get Composer Cache Directory
      id: composer-cache
      if: steps.check_files.outputs.files_exists == 'true'
      run: |
        echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Set up dependency caching for faster installs
      uses: actions/cache@v3
      if: steps.check_files.outputs.files_exists == 'true'
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Run composer install if composer.json exists
      if: steps.check_files.outputs.files_exists == 'true'
      run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

    - name: Set up database environment variables
      if: steps.check_files.outputs.files_exists == 'true'
      env:
        DB_CONNECTION: mysql
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: echo "Database environment variables set"

    - name: Run Laravel migrations and seeds
      if: steps.check_files.outputs.files_exists == 'true'
      run: php artisan migrate --force && php artisan db:seed --force

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: php-app
        path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: php-app

    - name: 'Deploy to Azure Web App'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: .
